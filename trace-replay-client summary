GetTypeId => Returns the type ID

StartApplication (void) => Called at the time specified by Start, 
                          and derived from the base class Applicatiom

SetConnectionId  => This method initializes the connection's ids (real ip and port address of client and server).
            The parameters are real ip address and port number of the client and server.

ScheduleTx => This method schedules next packet for sending
 
    If there is a packet in send queue (ie *numReq != 0), schedule
   it for sending. If delay for the packet is > 0 seconds
   then schedule the packet after that delay.
   Otherwise update the m_totExpByte and go to receive mode.

SendPacket => This method is called to send packet
   
    If the delay (packet.delay) for the packet is > 0 Seconds, then
    check all the parallel connections (packet.m_parallelConnList) between
    same client IP and server IP. If any of the parallel connection has
    not made desired progress or there is not enough buffer space available
    then reschedule the packet for later time.
    After sending the packet check whether there are more packet in send
    queue (ie m_numRep != 0), if so then call ScheduleTx again.
    Otherwise update m_totExpByte and go to receive mode.
  
ReceivePacket => This method is to receive a packet
   Receive packets from client.
    If m_totRecByte < m_totExpByte, wait for client to send more packet.
    After that if there are packets in send, call ScheduleTx,
    otherwise close the connection.
